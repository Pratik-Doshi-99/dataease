
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION COLON COMMA CONSTANT EQUAL GREATER LESSER LITERAL N NEWLINE NOT NUMBER OBJECT OPTION TEXT VERB WHITESPACE WORD\n    program : command_list\n    \n    command_list : command_list command \n            | command\n    command : ACTION OBJECT TEXT COLON options_list\n    \n    options_list : options_list c_option\n                | c_option\n    \n    c_option : OPTION VERB COLON value_list\n    \n    c_option : OPTION TEXT COLON value_list\n    \n    value_list : value_list COMMA value\n            | value\n    \n    value : NUMBER\n    \n    value : TEXT \n    \n    value : CONSTANT \n    \n    value : LITERAL \n    '
    
_lr_action_items = {'ACTION':([0,2,3,5,9,10,12,17,18,19,20,21,22,23,25,],[4,4,-3,-2,-4,-6,-5,-7,-10,-11,-12,-13,-14,-8,-9,]),'$end':([1,2,3,5,9,10,12,17,18,19,20,21,22,23,25,],[0,-1,-3,-2,-4,-6,-5,-7,-10,-11,-12,-13,-14,-8,-9,]),'OBJECT':([4,],[6,]),'TEXT':([6,11,15,16,24,],[7,14,20,20,20,]),'COLON':([7,13,14,],[8,15,16,]),'OPTION':([8,9,10,12,17,18,19,20,21,22,23,25,],[11,11,-6,-5,-7,-10,-11,-12,-13,-14,-8,-9,]),'VERB':([11,],[13,]),'NUMBER':([15,16,24,],[19,19,19,]),'CONSTANT':([15,16,24,],[21,21,21,]),'LITERAL':([15,16,24,],[22,22,22,]),'COMMA':([17,18,19,20,21,22,23,25,],[24,-10,-11,-12,-13,-14,24,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'command_list':([0,],[2,]),'command':([0,2,],[3,5,]),'options_list':([8,],[9,]),'c_option':([8,9,],[10,12,]),'value_list':([15,16,],[17,23,]),'value':([15,16,24,],[18,18,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> command_list','program',1,'p_program','de_parser.py',36),
  ('command_list -> command_list command','command_list',2,'p_command_list','de_parser.py',45),
  ('command_list -> command','command_list',1,'p_command_list','de_parser.py',46),
  ('command -> ACTION OBJECT TEXT COLON options_list','command',5,'p_command','de_parser.py',64),
  ('options_list -> options_list c_option','options_list',2,'p_option_list','de_parser.py',84),
  ('options_list -> c_option','options_list',1,'p_option_list','de_parser.py',85),
  ('c_option -> OPTION VERB COLON value_list','c_option',4,'p_option','de_parser.py',109),
  ('c_option -> OPTION TEXT COLON value_list','c_option',4,'p_option_text','de_parser.py',125),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','de_parser.py',139),
  ('value_list -> value','value_list',1,'p_value_list','de_parser.py',140),
  ('value -> NUMBER','value',1,'p_number','de_parser.py',162),
  ('value -> TEXT','value',1,'p_text','de_parser.py',172),
  ('value -> CONSTANT','value',1,'p_constant','de_parser.py',183),
  ('value -> LITERAL','value',1,'p_literal','de_parser.py',193),
]
